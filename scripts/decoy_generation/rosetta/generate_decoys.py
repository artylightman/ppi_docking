# author : artemis lightman
# date created : jan 3, 2023
# last modified: feb 25, 2023

# command line arguments
	# n - number of decoys
	# id - pdb id of target
	# c - chains in target

# dependencies:
	# arty.py

# input: none
# output: decoys for given target generated by rosetta

##############################################################################
# generates decoys for a given target
##############################################################################

import os
from datetime import datetime
import argparse
import arty

dt_start = datetime.now()

parser = argparse.ArgumentParser(description = "this script generates decoys for a given target using rosetta")

parser.add_argument("-n", type = int, help = "number of decoys to generate", default = 500)
parser.add_argument("-id", help = "pdb id of target", required = True)
parser.add_argument("-c", help = "chains in target", required = True)

args = parser.parse_args()

chain_one = args.c[0]
chain_two = args.c[1]

num_models = args.n

os.mkdir(args.id + "_rosetta")

os.system("cp docking.options " + args.id + "_rosetta/docking.options")
os.system("cp docking_full.xml " + args.id + "_rosetta/docking_full.xml")

os.system("cp complexes/relaxed_" + args.id + "_" + chain_one + "_noH.pdb " + args.id + "_rosetta/" + args.id + "_" + chain_one + "_noH.pdb")
os.system("cp complexes/relaxed_" + args.id + "_" + chain_two + "_noH.pdb " + args.id + "_rosetta/" + args.id + "_" + chain_two + "_noH.pdb")

os.chdir(args.id + "_rosetta")

# update docking partners

os.system("cat " + args.id + "_" + chain_one + "_noH.pdb " + args.id + "_" + chain_two + "_noH.pdb > " + args.id + "_" + chain_one + chain_two + ".pdb")

# run docking

os.system("/gpfs/loomis/apps/avx/software/Rosetta/3.12/main/source/bin/docking_protocol.static.linuxgccrelease -partners " + chain_one + "_" + chain_two + " -s " + args.id + "_" + chain_one + chain_two + ".pdb -native " + "../../../targets_relaxed/relaxed_" + args.id + "_complex_H.pdb" + " -use_input_sc -ex1 -ex2aro -ignore_zero_occupancy false -nstruct " + str(args.n))

dt = datetime.now()

str_dt = dt.strftime("%H:%M:%S on %d %B, %Y ")

str_runtime = arty.get_runtime(dt_start, dt)

print ("generate_decoys.py finished at " + str_dt + " (runtime " + str_runtime + ")")

